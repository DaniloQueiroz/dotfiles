#!/usr/bin/env python3
import time, requests, json
from pathlib import Path
import subprocess

DATA_DIR = Path.home().joinpath(".local", "share", "toggl")
SECRET_PATH = DATA_DIR.joinpath("secret")
AUDIO_PATH = DATA_DIR.joinpath("notification.wav")


def load_secret():
    """load .secret file"""
    with SECRET_PATH.open() as f:
        return "\n".join(f.readlines()).strip()


def load_current_project(api_token):
    response = requests.get("https://api.track.toggl.com/api/v8/time_entries/current", auth=(api_token, "api_token"))
    assert response.status_code == 200
    return json.loads(response.content)


def calculate_hours_minutes(duration):
    seconds = time.time() - abs(duration)
    m, s = divmod(seconds, 60)
    h, m = divmod(m, 60)
    h = int(h)
    m = int(m)
    m = f"0{m}" if m < 10 else str(m)
    return (str(h), m)


def notify_task(task, hours, minutes):
    minutes_i = int(minutes)
    if minutes_i == 0 or minutes_i == 30:
        msg = f"Task '{task}' is in progress for {hours}:{minutes}"
        cmd = ["notify-send", "-u", "critical", "-t", "30000", "-a", "Toggl", "Task in progress", msg]
        subprocess.run(args=cmd)
        cmd = ["aplay", str(AUDIO_PATH)]
        subprocess.run(args=cmd, capture_output=True)


def parse_data(data):
    if data is not None and "description" in data and "duration" in data:
        name = data['description']
        duration = data['duration']
        hours, minutes = calculate_hours_minutes(duration)
        notify_task(name, hours, minutes)
        print(f"{name} ({hours}:{minutes})")
    else:
        print("No project")


api_token = load_secret()
try:
    current = load_current_project(api_token)
except Exception as err:
    print(f"Error loading data: {err}")
parse_data(current.get("data"))
